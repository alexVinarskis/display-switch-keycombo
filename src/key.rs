//
// Copyright Â© 2022 Alex Vinarskis
// This code is licensed under MIT license (see LICENSE.txt for details)
//

// mapping from string to rdev::key
use rdev::Key;

pub fn key_from_string(string: &str) -> Key {
    match string {
        "Alt" => Key::Alt,
        "AltGr" => Key::AltGr,
        "Backspace" => Key::Backspace,
        "CapsLock" => Key::CapsLock,
        "ControlLeft" => Key::ControlLeft,
        "DownArrow" => Key::DownArrow,
        "Escape" => Key::Escape,
        "F1" => Key::F1,
        "F10" => Key::F10,
        "F11" => Key::F11,
        "F12" => Key::F12,
        "F2" => Key::F2,
        "F3" => Key::F3,
        "F4" => Key::F4,
        "F5" => Key::F5,
        "F6" => Key::F6,
        "F7" => Key::F7,
        "F8" => Key::F8,
        "F9" => Key::F9,
        "LeftArrow" => Key::LeftArrow,
        "MetaLeft" => Key::MetaLeft,
        "MetaRight" => Key::MetaRight,
        "Return" => Key::Return,
        "RightArrow" => Key::RightArrow,
        "ShiftLeft" => Key::ShiftLeft,
        "ShiftRight" => Key::ShiftRight,
        "Space" => Key::Space,
        "Tab" => Key::Tab,
        "UpArrow" => Key::UpArrow,
        "BackQuote" => Key::BackQuote,
        "Num1" => Key::Num1,
        "Num2" => Key::Num2,
        "Num3" => Key::Num3,
        "Num4" => Key::Num4,
        "Num5" => Key::Num5,
        "Num6" => Key::Num6,
        "Num7" => Key::Num7,
        "Num8" => Key::Num8,
        "Num9" => Key::Num9,
        "Num0" => Key::Num0,
        "Minus" => Key::Minus,
        "Equal" => Key::Equal,
        "KeyQ" => Key::KeyQ,
        "KeyW" => Key::KeyW,
        "KeyE" => Key::KeyE,
        "KeyR" => Key::KeyR,
        "KeyT" => Key::KeyT,
        "KeyY" => Key::KeyY,
        "KeyU" => Key::KeyU,
        "KeyI" => Key::KeyI,
        "KeyO" => Key::KeyO,
        "KeyP" => Key::KeyP,
        "LeftBracket" => Key::LeftBracket,
        "RightBracket" => Key::RightBracket,
        "KeyA" => Key::KeyA,
        "KeyS" => Key::KeyS,
        "KeyD" => Key::KeyD,
        "KeyF" => Key::KeyF,
        "KeyG" => Key::KeyG,
        "KeyH" => Key::KeyH,
        "KeyJ" => Key::KeyJ,
        "KeyK" => Key::KeyK,
        "KeyL" => Key::KeyL,
        "SemiColon" => Key::SemiColon,
        "Quote" => Key::Quote,
        "BackSlash" => Key::BackSlash,
        "KeyZ" => Key::KeyZ,
        "KeyX" => Key::KeyX,
        "KeyC" => Key::KeyC,
        "KeyV" => Key::KeyV,
        "KeyB" => Key::KeyB,
        "KeyN" => Key::KeyN,
        "KeyM" => Key::KeyM,
        "Comma" => Key::Comma,
        "Dot" => Key::Dot,
        "Slash" => Key::Slash,
        "Function" => Key::Function,
        _ => Key::Unknown(99),
    }
}

pub trait KeyDetectCallback {
    fn key_pressed(&mut self, key: &Key);
    fn key_released(&mut self, key: &Key);
}
